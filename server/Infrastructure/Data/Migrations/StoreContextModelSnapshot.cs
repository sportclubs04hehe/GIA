// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Domain.HangHoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MaMatHang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayHetHieuLuc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayHieuLuc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NhomHangHoaId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenMatHang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NhomHangHoaId");

                    b.ToTable("HangHoa");
                });

            modelBuilder.Entity("Core.Entities.Domain.NhomHangHoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MaNhom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("NhomChaId")
                        .HasColumnType("uuid");

                    b.Property<string>("TenNhom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NhomChaId");

                    b.ToTable("NhomHangHoa");
                });

            modelBuilder.Entity("Core.Entities.Domain.HangHoa", b =>
                {
                    b.HasOne("Core.Entities.Domain.NhomHangHoa", "NhomHangHoa")
                        .WithMany("HangHoas")
                        .HasForeignKey("NhomHangHoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NhomHangHoa");
                });

            modelBuilder.Entity("Core.Entities.Domain.NhomHangHoa", b =>
                {
                    b.HasOne("Core.Entities.Domain.NhomHangHoa", "NhomCha")
                        .WithMany("NhomCon")
                        .HasForeignKey("NhomChaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NhomCha");
                });

            modelBuilder.Entity("Core.Entities.Domain.NhomHangHoa", b =>
                {
                    b.Navigation("HangHoas");

                    b.Navigation("NhomCon");
                });
#pragma warning restore 612, 618
        }
    }
}
